@inherits Custom.Hybrid.RazorTyped
@* This inherits statement gets you features like App, CmsContext, Data etc. - you can delete this comment *@

@{
    var bikes = AsItems(App.Data["Bike"]);
    var kawasaki = bikes.FirstOrDefault(b => b.Title == "Kawasaki");

    var cars = AsItems(App.Data["Car"]);
    var mazda = cars.FirstOrDefault(c => c.Title == "Mazda");
    var subaru = cars.FirstOrDefault(c => c.Title == "Subaru");
    var citroen = cars.FirstOrDefault(c => c.Title == "Citroen");

    var prefillMazdaEntityEntity = "EntityEntity=" + mazda.Guid;
    var prefillSubaruEntityEntity = "EntityEntity=" + subaru.Guid;
    var prefillSubaruAndMazdaEntityEntity = "EntityEntity=" + subaru.Guid + "," + mazda.Guid;
    @* var prefillMazdaId = "EntityEntity=[" + mazda.Id + "]"; *@

    var prefillKawasakiEntityEntity = "EntityEntity=" + kawasaki.Guid;
    var prefillMazdaAndKawasakiEntityEntity = "EntityEntity=" + mazda.Guid + "," + kawasaki.Guid;
}

<h1 @Kit.Toolbar.Default()>Test pickers app</h1>

<h2>Entity - Entity</h2>
<h3>Old configs</h3>
<ul>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill: prefillMazdaEntityEntity)>
        With prefill Mazda (send GUID, show Mazda)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill: prefillSubaruEntityEntity)>
        With prefill Subaru (send GUID, show Subaru)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill:
             prefillSubaruAndMazdaEntityEntity)>
        With prefill Subaru and Mazda (send GUIDs, show Subaru and Mazda)
    </li>
    @* <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill: prefillMazdaId)>
    With prefill Mazda ID
    </li> *@
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill:
             prefillKawasakiEntityEntity)>
        With prefill Kawasaki (send GUID, show some GUID)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill:
             prefillMazdaAndKawasakiEntityEntity)>
        With prefill Mazda and Kawasaki (send GUIDs, show Mazda and some GUID)
    </li>
</ul>
<h3>New configs</h3>
<ul>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("NewEntityPickerEntitySingle", prefill:
             prefillMazdaEntityEntity)>
        With prefill Mazda (send GUID, show Mazda)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("NewEntityPickerEntitySingle", prefill:
             prefillSubaruEntityEntity)>
        With prefill Subaru (send GUID, show Subaru)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("NewEntityPickerEntitySingle", prefill:
             prefillSubaruAndMazdaEntityEntity)>
        With prefill Subaru and Mazda (send GUIDs, show Subaru and Mazda)
    </li>
    @* <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityEntitySingle", prefill: prefillMazdaId)>
    With prefill Mazda ID
    </li> *@
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("NewEntityPickerEntitySingle", prefill:
             prefillKawasakiEntityEntity)>
        With prefill Kawasaki (send GUID, show some GUID)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("NewEntityPickerEntitySingle", prefill:
             prefillMazdaAndKawasakiEntityEntity)>
        With prefill Mazda and Kawasaki (send GUIDs, show Mazda and some GUID)
    </li>
</ul>

<h2>Entity - Query</h2>
<ul>
    @{
        var prefillCitroenEntityQuery = "EntityQuerySpecialStream=" + citroen.Guid;
        var prefillMazdaEntityQuery = "EntityQuery=" + mazda.Guid;
        var prefillSubaruEntityQuery = "EntityQuery=" + subaru.Guid;
        var prefillSubaruAndMazdaEntityQuery = "EntityQuery=" + subaru.Guid + "," + mazda.Guid;

        var prefillKawasakiEntityQuery = "EntityQuery=" + kawasaki.Guid;
        var prefillMazdaAndKawasakiEntityQuery = "EntityQuery=" + mazda.Guid + "," + kawasaki.Guid;
    }
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityQuerySingle", prefill: prefillMazdaEntityQuery)>
        With prefill Mazda(send GUID, show Mazda)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityQuerySingle", prefill: prefillSubaruEntityQuery)>
        With prefill Subaru (send GUID, show Subaru)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityQuerySingle", prefill:
             prefillSubaruAndMazdaEntityQuery)>
        With prefill Subaru and Mazda (send GUIDs, show Subaru and Mazda)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityQuerySingleSpecialStream", prefill:
             prefillCitroenEntityQuery)>
        With prefill Citroen(send GUID, show Citroen) on a field with special query stream
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityQuerySingle", prefill: prefillKawasakiEntityQuery)>
        With prefill Kawasaki (send GUID, show some GUID)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldEntityQuerySingle", prefill:
             prefillMazdaAndKawasakiEntityQuery)>
        With prefill Mazda and Kawasaki (send GUIDs, show Mazda and some GUID)
    </li>
</ul>

<h2>String - Query</h2>
<ul>
    @{
        var prefillMazdaStringQuery = "StringQuery=" + mazda.Attribute("Model");
        var prefillSubaruStringQuery = "StringQuery=" + subaru.Attribute("Model");
        var prefillSubaruAndMazdaStringQuery = "StringQuery=" + subaru.Attribute("Model") + "," + mazda.Attribute("Model");
    }
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldStringQuerySingle", prefill: prefillMazdaStringQuery)>
        With prefill Mazda (send Miata, show Mazda)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldStringQuerySingle", prefill: prefillSubaruStringQuery)>
        With prefill Subaru (send Impreza WRX STI, show Subaru)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldStringQuerySingle", prefill:
             prefillSubaruAndMazdaStringQuery)>
        With prefill Subaru and Mazda (send Impreza WRX STI, Miata, show Subaru and Mazda)
    </li>
</ul>

<h2>String - Dropdown</h2>
<ul>
    @{
        var prefillMazdaStringDropdown = "StringDropdown=" + "Mazda";
        var prefillSubaruStringDropdown = "StringDropdown=" + "Subaru";
        var prefillSubaruAndMazdaStringDropdown = "StringDropdown=" + "Subaru" + "," + "Mazda";
    }
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldStringDropdownSingle", prefill:
             prefillMazdaStringDropdown)>
        With prefill Mazda (send Mazda, show Miata)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldStringDropdownSingle", prefill:
             prefillSubaruStringDropdown)>
        With prefill Subaru (send Subaru, show Impreza WRX STI)
    </li>
    <li @Kit.Toolbar.Empty().Settings(hover: "left").New("OldStringDropdownSingle", prefill:
             prefillSubaruAndMazdaStringDropdown)>
        With prefill Subaru and Mazda (send Subaru, Mazda, show Impreza WRX STI, Miata)
    </li>
</ul>